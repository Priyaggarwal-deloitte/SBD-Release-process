<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>asmt_assessment_instance</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="asmt_assessment_instance">stateCHANGESTOcomplete^EQ<item display_value="Complete" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="complete"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Make security tasks in progress</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Add your code here
    var releasePhase = current.trigger_id;

    var releaseTask = new GlideRecord('rm_task');
    releaseTask.addEncodedQuery('sys_idSTARTSWITH' + releasePhase);
    releaseTask.query();
    while (releaseTask.next()) {
        var subType = releaseTask.x_675641_sbd_relea_sub_type;
        if (subType == 'container scan' || subType == 'mobile application scan' || subType == 'dast scan' || subType == 'infrastructure scan' || subType == 'api scan') {
            releaseTask.x_675641_sbd_relea_status = 'work_in_progress';
            releaseTask.state = 2;
            releaseTask.update();
        }
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>bishnu</sys_created_by>
        <sys_created_on>2022-11-22 16:55:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6682d142975391100406bbc3f153af08</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Make security tasks in progress</sys_name>
        <sys_overrides/>
        <sys_package display_value="SBD Release process" source="x_675641_sbd_relea">2f627e3397b611100406bbc3f153afa8</sys_package>
        <sys_policy/>
        <sys_scope display_value="SBD Release process">2f627e3397b611100406bbc3f153afa8</sys_scope>
        <sys_update_name>sys_script_6682d142975391100406bbc3f153af08</sys_update_name>
        <sys_updated_by>bishnu</sys_updated_by>
        <sys_updated_on>2022-11-24 10:26:28</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6682d142975391100406bbc3f153af08"/>
</record_update>
